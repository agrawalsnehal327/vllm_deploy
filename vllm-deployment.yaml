apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt-oss-120b
  labels:
    app: gpt-oss-120b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpt-oss-120b
  template:
    metadata:
      labels:
        app: gpt-oss-120b
    spec:
      restartPolicy: Always
      containers:
      - name: gpt-oss-120b
        image: vllm/vllm-openai:gptoss   # matches Helm values.yaml
        args:
          - "--model"
          - "openai/gpt-oss-120b"
          - "--host"
          - "0.0.0.0"
          - "--port"
          - "8000"
          - "--trust-remote-code"
        env:
          - name: TORCH_CUDA_ARCH_LIST
            value: "9.0"
          - name: CUDA_VISIBLE_DEVICES
            value: "3,4"
          - name: NCCL_DEBUG
            value: "INFO"
        ports:
          - containerPort: 8000
        resources:
          limits:
            nvidia.com/gpu: 2
          requests:
            nvidia.com/gpu: 2
            cpu: "32"
            memory: "128Gi"
        volumeMounts:
          - name: dshm
            mountPath: /dev/shm
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: "64Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: gpt-oss-120b-service
spec:
  selector:
    app: gpt-oss-120b
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30503   # force specific NodePort
  type: NodePort
